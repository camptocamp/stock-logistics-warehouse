<?xml version="1.0" encoding="utf-8" ?>
<odoo noupdate="1">
    <!-- used for concurrency unit test, that needs already existing stock moves -->
    <record id="outgoing_shipment_auto_assign" model="stock.picking">
        <field name="picking_type_id" ref="stock.picking_type_out" />
        <field name="origin">outgoing shipment main_warehouse</field>
        <field name="user_id" />
        <field name="partner_id" ref="base.res_partner_1" />
        <field name="date" eval="DateTime.today()" />
        <field name="move_type">one</field>
        <field name="location_id" ref="stock.stock_location_stock" />
        <field name="location_dest_id" ref="stock.stock_location_customers" />
        <field
            name="move_lines"
            model="stock.move"
            eval="[
            (0, 0, {
                'name': obj().env.ref('product.product_product_27').name,
                'product_id': ref('product.product_product_27'),
                'product_uom': ref('uom.product_uom_unit'),
                'product_uom_qty': 1000.0,
                'picking_type_id': ref('stock.picking_type_out'),
                'location_id': ref('stock.stock_location_stock'),
                'location_dest_id': ref('stock.stock_location_customers'),
            }),
            (0, 0, {
            'name': obj().env.ref('product.product_product_3').name,
            'product_id': ref('product.product_product_3'),
            'product_uom': ref('uom.product_uom_unit'),
            'product_uom_qty': 1000.0,
            'picking_type_id': ref('stock.picking_type_out'),
            'location_id': ref('stock.stock_location_stock'),
            'location_dest_id': ref('stock.stock_location_customers'),
            }),
            ]"
        />
    </record>
    <function model="stock.picking" name="action_confirm">
        <value
            model="stock.picking"
            eval="[
            obj().env.ref('stock_move_auto_assign.outgoing_shipment_auto_assign').id,
            ]"
        />
    </function>
</odoo>
